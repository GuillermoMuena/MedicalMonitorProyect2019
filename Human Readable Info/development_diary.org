#+Title: Development Diary / Diario de desarrollo
#+Author: Guillermo Ariel Muena Vidal

* 2019-04-16

========== INICIO DE LA ENTRADA ==========

Hoy se trabajó sobre el ADC, más precisamente sobre la rutina de
atención de interrupciones del mismo. Como viene siendo costumbre se
acomodó todo para que la función desarrollada sea lo más genérica
posible. Hay que tener en cuenta que debido a los cambios que se
prestenden hacer en el proyecto es posible que sea necesario hacer dos
proyectos separados, uno para el monitor médico y otro separado para
el medidor de presión arterial, así que lo mejor es tener esta parte
del proyecto desarrollada lo más genéricamente posible (y así ya tener
dos problemas solucionados con un sólo código).

El código se encuentra correspondientemente documentado en doxygen,
para aquel que quiera leerlo. Básicamente se respetó la rutina
desarrollada para el proyecto del año pasado, pero incorporando las
nociones de compilación condicional. Nótese que se lo ha hecho
dependiente del mismo archivo de configuración que controla la
inicialización del hardware del ADC. De esta manera no puede cometerse
el error de inicializar por hardware el ADC y no atender las
interrupciones.

Se desarrolló también una función genérica de manejo de datos y se
aliasearon todas las funciones particulares. La idea es usar la
función genérica para el debuggeo del ADC y luego definir cada función
por separado para el manejo de cada canal. De esta manera podemos
debuggear de manera sencilla. Si queremos probar esto es necesario
hacer un main y generar un proyecto en semihosting.

El día de mañana la idea sería generar un proyecto para hacer las
pruebas pertinentes. Todavía no se concurrirá al laboratorio para las
pruebas. No por ahora. Una vez que se tenga lo que se quiere probar y
se estipulen los métodos para medir y testear correspondientemente,
iré al laboratorio.

Mañana será otro día más de programación.

En una nota aparte hoy consulte con Marcelo Romeo si había leído el
mail que envié el viernes (o el sábado) pasado, con el link
correspondiente a este repositorio, así que supongo lo habrá visto y
eventualmente lo clonará o revisará para chequear el progreso. Hoy no
fue Juan Bacigalupo así que a él no le pude consultar si recibió o no
el mail. También le consulté a Marcelo sobre la parte del driver de PC
de la parte de USB. Me dijo que lo veremos más a futuro, pero ante mi
insistencia me dijo que me iba a mandar unos tutoriales si quiero
arrancar por mi cuenta.

========== FIN DE LA ENTRADA ==========

* 2019-04-15

========== INICIO DE LA ENTRADA ==========

Hoy se desarrollo la parte de ADC, más precisamente la
incicialización. Lo que hice fue  tomar la función que desarrollamos
el año pasado y darle un caracter más genérico, implementando defines
para controlar la compilación condicional y haciendo un archivo .h con
todos los defines necesarios para que la implementación de la
compilación condicional sea lógica y ordenada.

Además de eso estoy documentando todo en formato de DOXYGEN. Un error
muy patente que noté el año pasado es que nos faltaba un montón de
documentación del código. Implementar desde ahora doxygen puede servir
para que el código sea más fácilmente debuggeable, además de
legible. Espero que esto también me aliviane el hecho de que voy a
tener que preparar un informe final yo sólo. Empezar con buena letra
ahora puede ser ventajoso en un futuro.

Hay que hacer las pruebas pertinentes a ver si el código funciona,
pero por ahora no tengo el MCUexpreso en esta computadora. Me parece
que lo voy a probar recurriendo a la otra, dejando a esta PC libre de
ese programa endemoniado. Por ahora estoy editando todo en Emacs, lo
que me permite ser más prolijo, rápido y eficiente.

Por ahora no hay rutinas de prueba, dediqué una hora hoy a este
pasaje. Mañana será otra y emplearé el tiempo en idear una forma de
testeo por pasos, además de hacer la función que maneje los
resultados/lecturas del ADC para poder verlos de alguna manera.

También tengo que verificar la implementación del medidor de
temperatura. Tendría que cambiar la plaquita y mandarla a diseñar,
para que sea algo un cachito más presentable.

A todo esto hay que sumarle la implemtación del medidor de presión con
el LPC 1769. Supongo que tendré que volver al endemoniado código del
Arduino y ver cómo lo habíamos llevado a cabo.

========== FIN DE LA ENTRADA ==========

* 2019-04-14

========== INICIO DE LA ENTRADA ==========

Comienzo este diario de desarrollo. La idea es ir ordenando desde el
principio el proyecto para ir avanzando lento pero seguro hasta la
presentación del mismo. Lo primero que hice fue ordenar el GitHub de manera
prolija. La creación del mismo y el mail con el link les fue enviado a
los profesores el 2019-04-12, explicándoles cómo iba a funcionar
esto. Al día de la fecha no hubo respuesta por su parte.

Hoy cominezo con el diario de desarrollo, colocándolo en una carpeta
separada que llamé 'Human Readable Info'. La idea de hoy es comenzar
con alguna rutina y sus respectivas pruebas. Al contrario de lo que
hice el año pasado de probar todas las rutinas en conjunto al final
del desarrollo, este año me propongo crear estructuras y funciones
individuales, en C (probablemente las desarrolle en C++) cuya lógica
pueda probar exhaustivamente mediante rutinas de prueba en C++, y
luego pasarlas a la ejecución en el microprocesador del LPC. Para
aquellas cosas que sean sumamente hardware dependant, voy a hacer
funciones de prueba pequeñas, un proceso de prueba en laboratorio
acotado (con un respectivo protocolo para toma de resultados) y me
limitaré a hacer debugging en casa, para acotar lo más posible el
desarrillo en el laboratorio de electrónica. De esta manera pretendo
gastar la menor cantidad de tiempo posible en el laboatorio,
maximizando mi tiempo en el mismo y dejando el tiempo de programación
estrictamente ligado a mis horas más productivas.

En principio estaríamos hablando de pasar 3 horas semanales en el
laboratorio de electrónica: una hora el lunes, una hora el viernes y
una hora el sábado, únicamente con la finalidad de hacer pruebas con
instrumental. El resto de los días y horarios hay que dedicarlos al
desarrollo de rutinas, planificación de mediciones y a la corrección
de errores. Con una media de una hora por día de desarrollo de todas
estas etapas creo que llegaré a julio con las rutinas base listas, y
con las correcciones pertinentes a la placa.

A todo este tiempo de desarrollo le sumaré una hora o dos más a la
semana para planificación, redacción de informes, pulido del diario de
desarrollo y demás cuetiones.

Esta es la primera entrada, quedando aquí el primer término del
trabajo. Para el día de mañana lunes 2019-04-15 se planifica el
desarrollo de la rutina de ADC del microcontrolador. La misma se
pretende utilizar tanto en la medición de temperatura como en la
medición de la presión arterial. El día de mañana no se concurrirá al
laboratorio. La idea es diseñar los test necesarios para probar el
correcto funcionamiento del ADC con los instrumentos de
laboratorio. Obviamente se rescatará lo diseñado el año pasado
respecto a esta rutina.

========== FIN DE LA ENTRADA ==========
